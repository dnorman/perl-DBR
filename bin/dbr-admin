#!/usr/bin/perl

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation.

use strict;
use Curses::UI;
use DBR;
use DBR::Util::Logger;
use DBR::Admin::Window::MainMenu;

my ($conffile) = @ARGV;
my $confdb = 'dbrconf';

if (!$conffile) {
    print "you must supply the path to the dbr config file as the first argument\n";
    exit;
}

my $logger = new DBR::Util::Logger(-logpath => '/tmp/dbr_admin.log', -logLevel => 'debug2') or die "Failed to create logger";

my $dbr    = new DBR(
		     -logger => $logger,
		     -conf   => $conffile,
		     -admin  => 1,         # This flag allows us to update definitions through the DBR::Conf objects
		    ) or die "Failed to create DBR";



my $conf_instance = $dbr->get_instance($confdb) or die "No config found for confdb $confdb";

open STDERR, ">>/tmp/dbr_admin.err"; # stderr gets messed up by curses, so put stuff in a logfile for easier reading

my $cui = new Curses::UI(
			 -color_support => 1,
			 -mouse_support => 1,
			);

DBR::Admin::Window::MainMenu->new(
				  conf_instance => $conf_instance,
				  id     => 'DBR Admin Main Menu',
				  parent => $cui
				 );

$cui->set_binding( \&exit_dialog , "\cQ");
$cui->set_binding( sub { exit } , "\cC");


$cui->mainloop();

################################
sub exit_dialog
{
    my $return = $cui->dialog(
			      -message   => "Do you really want to quit?",
			      -title     => "Are you sure???", 
			      -buttons   => ['yes', 'no'],

			     );

    exit(0) if $return;
}



